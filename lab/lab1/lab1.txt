Lab 1:
Cerinta 1) 
cuvinte rezervate: var, cin, cout, readInt, readDouble, endl, main, return;
tipuri de date: int, float, point
operatori: +, -, /, *, >, <
separatori: ;
bitwise operatori: >>, <<
atribuire: = 
intrare: cin
iesire: cout
selectie: if (cond)
ciclare: while (cond), for(i=1,n)

BNF:
<program> ::= <headers_block> <main_block>
<headers_block> ::= <headers_list> using namespace std ;
<headers_list> ::= <header> | <header> <headers_list>
<header> ::= # include <library>
<library> ::= "<" iostream ">" | "<" fstream ">"
<main_block> ::= <type> main ( ) { <instr_list> }
<type> ::= int | void | double | point
<point> ::= struct { int ID; int ID; } ID;
<instr_list> ::= <instr> | <instr> <instr_list>
<instr> ::=  atribuire | read | write | if_instr | while_instr | for_instr
<atribuire> ::= <type> ID; | ID = <expr>
<expr> ::= ID | CONST | operand <expr>
<operand> ::= ID | CONST operator ID | CONST
<operator> ::= + | - | / | * | > | <
CONST ::= 0 | <non_zero_digit> | <non_zero_digit> CONST | <non_zero_digit> . <non_zero_digit> | <non_zero_digit> . <digit_list>
<digit_list> ::= <digit> | digit> <digit_list>
<digit> ::= 0 <non_zero_digit>
<non_zero_digit> ::= 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<read> ::= cin >> ID;
<write> ::= cout << ID;
<if_instr> ::= if ( <expr> ) { <atribuire> } | if ( <expr> ) { <atribuire> } else { <atribuire> }
<while_instr> ::= while ( <expr> ) { <instr> } | while ( <expr> ) { <instr_list> }
<for_instr> ::= for ( <atribuire>; <expr>; <expr> ) { <instr> } | for ( <atribuire>; <expr>; <expr> ) { <instr_list> } 
ID ::= CONST | CONST ID | <chars> | <chars> ID 
<chars> ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
 


Cerinta 2)
a) perimetrul si aria cercului de o raza data
#include <iostream>
using namespace std;

int main() {
	int perimetru;
	int r;
	cin >> r;
	perimetru = 2 * 3.14 * r;
	double arie;
	arie = pi * r * r;
	cout << perimetru;
	cout << arie;
}

b) cmmdc
#include <iostream>
using namespace std;

int main() {
	int n;
	int m;
	cin >> n;
	cin >> m;
	while (n != m){
		if(n > m) {
			n = n - m;
		}
		else {
			m = m - n; 
		}
	}
	cout << n;
}

c) suma a n numere citite de la tastatura
#include <iostream>
using namespace std;

int main() {
	int n;
	int suma; 
	int x;
	cin >> n;
	for(i = 0; i < n; i++) {
		cin >> x;
		suma = suma + x;
	}
	cout << suma;
}

Cerinta 3)
a) Unul dintre programe contine doua erori care sunt in acelasi timp erori in limbajul original (pentru care MLP defineste un subset)
#include <iostream>
using namespace std;

int main() {
	int perimetru;
	int 22r; 
	cin >> r;
	perimetru = 2 * 3.14 * r;
	double arie;
	arie = pi * r * r;
	cout << perimetru;
	cout << arie;
}

b) Al doilea program contine doua erori conform MLP, dar care nu sunt erori in limbajul original
#include <iostream>
using namespace std;

int main() {
	int n, m;
	cin >> n >> m;
	while (n != m){
		if(n > m) n -= m;
		else m -= n;
	}
	cout << n << endl;
	return 0;
}
